# ******************* DO NOT EDIT THIS NOTICE *****************
# This legal notice is added to every supported source code
# file at every commit. See the README for more info!                          
# *************************************************************
name: Deploy

on:
  push:
    branches:
      # - dev
      - main
      # - preview/**
      # - release/**

env:
  NAMESPACE: karma
  ACCT:
  AWS_ACCOUNT:
  ENV:

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: |
          npm i -g @antfu/ni
          nci

      # Extract ENV from branch name & retrieve environment AWS_ACCOUNT_TOKEN (e.g. DEV, TEST, PROD).
      - name: Load Environment Variables
        run: |
          nlx vc -o dotenv
          cat dotenv >> $GITHUB_ENV

      # Use AWS_ACCOUNT_TOKEN to resolve AWS_ACCOUNT from organization valiable (e.g. AWS_ACCOUNT_DEV).
      # Skips remainder of job if AWS_ACCOUNT not resolved.
      - name: Resolve AWS Account
        env:
          ENV: ${{ env.ENV }}
          AWS_ACCOUNT: ${{ vars.AWS_ACCOUNT_MASTER }}
        run: |
          if [ -z "$ENV" ]
          then
            echo "No environment specified. Skipping deployment!"
          else
            echo "Resolved environment to '$ENV'."
            if [ -z "$AWS_ACCOUNT" ]
            then
              echo "Unable to resolve AWS_ACCOUNT_MASTER. Skipping deployment!"
            else
              echo "Resolved AWS account to '$AWS_ACCOUNT'."
              echo "AWS_ACCOUNT=$AWS_ACCOUNT" >> $GITHUB_ENV
            fi
          fi

      - name: Starting Webhook
        if: ${{ env.AWS_ACCOUNT != '' }}
        uses: joelwmale/webhook-action@448a17bf857ead98546cfbdbe3b9d4cf979dda95
        with:
          url: ${{ vars.DEPLOY_WEBHOOK_URL }}
          body: '{"env": "${{ env.ENV }}", "repository": "${{ github.repository }}", "runId": "${{ github.run_id }}", "serverUrl": "${{ github.server_url }}", "status": "started"}'

      # Configure AWS credentials using AWS_ACCOUNT.
      - name: Configure AWS Credentials
        if: ${{ env.AWS_ACCOUNT != '' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.NAMESPACE }}-terraform-user
          aws-region: us-east-1
          role-duration-seconds: 3600

      - name: ACCT - Initialize Terraform
        if: ${{ env.AWS_ACCOUNT != '' }}
        run: |
          cd src/acct
          terraform init
          terraform workspace select ${{ env.ACCT }}

      - name: ACCT - Lint Source Code
        if: ${{ env.AWS_ACCOUNT != '' }}
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          cd src/acct
          tflint --init
          tflint

      - name: ACCT - Deploy Infrastructure
        if: ${{ env.AWS_ACCOUNT != '' }}
        run: |
          cd src/acct
          terraform apply -auto-approve

      - name: ENV - Initialize Terraform
        if: ${{ env.AWS_ACCOUNT != '' }}
        run: |
          cd src/env
          terraform init
          terraform workspace select ${{ env.ENV }}

      - name: ENV - Lint Source Code
        if: ${{ env.AWS_ACCOUNT != '' }}
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          cd src/env
          tflint --init
          tflint

      - name: ENV - Deploy Infrastructure
        if: ${{ env.AWS_ACCOUNT != '' }}
        run: |
          cd src/env
          terraform apply -auto-approve

      - name: Ending Webhook
        if: ${{ always() && env.AWS_ACCOUNT != '' }}
        uses: joelwmale/webhook-action@448a17bf857ead98546cfbdbe3b9d4cf979dda95
        with:
          url: ${{ vars.DEPLOY_WEBHOOK_URL }}
          body: '{"env": "${{ env.ENV }}", "repository": "${{ github.repository }}", "runId": "${{ github.run_id }}", "serverUrl": "${{ github.server_url }}", "status": "${{ job.status }}"}'
